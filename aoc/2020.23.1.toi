// TODO: assumptions: there are 9 total numbers; lowest number is 1; highest number is 9
Cup{num nextCup}

prev = 0 // dummy value that will never be used to satisfy the compiler
for char = [chars([inputLines()]0)]c {
    cup = Cup(int(char), 0)
    if c <> 0 {
        prev.nextCup = cup
    } otherwise {
        first = cup
    }
    prev = cup
}
prev.nextCup = first

findDestination|current| destination {
    label = current.num
    while 1 {
        label = label - 1
        if label < 1 {
            label = 9
        }
        destination = current
        i = 0
        while i < 6 {
            if destination.num == label {
                exit function
            }
            i = i + 1
            destination = destination.nextCup
        }
    }
}

current = first
move = 0
while move < 100 {
    move = move + 1
    clockwise1 = current.nextCup
    clockwise2 = clockwise1.nextCup
    clockwise3 = clockwise2.nextCup
    current.nextCup = clockwise3.nextCup

    destination = findDestination(current)
    destinationNext = destination.nextCup
    destination.nextCup = clockwise1
    // clockwise1 still points to clockwise2; clockwise2 still points to clockwise3
    clockwise3.nextCup = destinationNext
    current = current.nextCup
}

while current.num <> 1 {
    current = current.nextCup
}

i = 0
s = ""
while i < 8 {
    current = current.nextCup
    i = i + 1
    s = s _ string(current.num)
}
println(s)
